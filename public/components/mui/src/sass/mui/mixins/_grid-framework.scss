// Overrides bootstrap functions to add prfx support

@mixin make-grid-columns($mui-i: 1, $mui-list: ".mui-col-xs-#{$mui-i}, .mui-col-sm-#{$mui-i}, .mui-col-md-#{$mui-i}, .mui-col-lg-#{$mui-i}") {
  @for $mui-i from (1 + 1) through $mui-grid-columns {
    $mui-list: "#{$mui-list}, .mui-col-xs-#{$mui-i}, .mui-col-sm-#{$mui-i}, .mui-col-md-#{$mui-i}, .mui-col-lg-#{$mui-i}";
  }
  #{$mui-list} {
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left:  ($mui-grid-gutter-width / 2);
    padding-right: ($mui-grid-gutter-width / 2);
  }
}

@mixin float-grid-columns($mui-class, $mui-i: 1, $mui-list: ".mui-col-#{$mui-class}-#{$mui-i}") {
  @for $mui-i from (1 + 1) through $mui-grid-columns {
    $mui-list: "#{$mui-list}, .mui-col-#{$mui-class}-#{$mui-i}";
  }
  #{$mui-list} {
    float: left;
  }
}

@mixin calc-grid-column($mui-index, $mui-class, $mui-type) {
  @if ($mui-type == width) and ($mui-index > 0) {
    .mui-col-#{$mui-class}-#{$mui-index} {
      width: percentage(($mui-index / $mui-grid-columns));
    }
  }
  @if ($mui-type == push) and ($mui-index > 0) {
    .mui-col-#{$mui-class}-push-#{$mui-index} {
      left: percentage(($mui-index / $mui-grid-columns));
    }
  }
  @if ($mui-type == push) and ($mui-index == 0) {
    .mui-col-#{$mui-class}-push-0 {
      left: auto;
    }
  }
  @if ($mui-type == pull) and ($mui-index > 0) {
    .mui-col-#{$mui-class}-pull-#{$mui-index} {
      right: percentage(($mui-index / $mui-grid-columns));
    }
  }
  @if ($mui-type == pull) and ($mui-index > 0) {
    .mui-col-#{$mui-class}-pull-#{$mui-index} {
      right: percentage(($mui-index / $mui-grid-columns));
    }
  }
  @if ($mui-type == pull) and ($mui-index == 0) {
    .mui-col-#{$mui-class}-pull-0 {
      right: auto;
    }
  }
  @if ($mui-type == offset) {
    .mui-col-#{$mui-class}-offset-#{$mui-index} {
      margin-left: percentage(($mui-index / $mui-grid-columns));
    }
  }
}
